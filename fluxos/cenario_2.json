{
  "name": "Cenário 2",
  "nodes": [
    {
      "parameters": {
        "updates": [
          "message"
        ],
        "additionalFields": {}
      },
      "type": "n8n-nodes-base.telegramTrigger",
      "typeVersion": 1.2,
      "position": [
        -64,
        0
      ],
      "id": "cc6c40d3-e4b5-4b62-9113-fe2c2720368e",
      "name": "Telegram Trigger",
      "webhookId": "031be575-dde8-4f97-8472-59ee37104fb9",
      "credentials": {
        "telegramApi": {
          "id": "F1XsbGDUdE1n66HV",
          "name": "Telgram Token"
        }
      }
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "typeVersion": 1,
      "position": [
        560,
        160
      ],
      "id": "9800c790-3064-4fbb-b32a-5c97e07b82ce",
      "name": "Google Gemini Chat Model",
      "credentials": {
        "googlePalmApi": {
          "id": "uudgVexPy2IFFMaZ",
          "name": "Google Gemini(PaLM) Api account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "4df52f44-2347-4c7d-a89d-363bf7d879cb",
              "leftValue": "={{ $json.output }}",
              "rightValue": "boas_vindas",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        912,
        0
      ],
      "id": "312f5989-f45e-451b-a4fb-bcc83d6d47ef",
      "name": "If"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "fd86b11c-7079-4298-88d9-65d53b7185fa",
              "name": "chatId",
              "value": "={{ $json.message.chat.id }}",
              "type": "string"
            },
            {
              "id": "6e312cad-4834-4d59-88f8-d5f9f36d46fa",
              "name": "message",
              "value": "={{ $json.message.text }}",
              "type": "string"
            },
            {
              "id": "01a01011-944d-41e7-a0c7-6ae76c7d4aa0",
              "name": "from_id",
              "value": "={{ $json.message.from.id }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        128,
        0
      ],
      "id": "11f8054f-14b3-49cf-9ec2-ad40089ae486",
      "name": "Edit Fields"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "Crie uma mensagem de boas-vindas calorosa. Apresente-se como Clô e pergunte de forma aberta como você pode ajudar a pessoa a encontrar o look perfeito hoje.",
        "options": {
          "systemMessage": "Você é a Clô, a assistente de estilo e anfitriã virtual da nossa loja de roupas. Sua personalidade é alegre, casual e muito prestativa, como se estivesse conversando com uma amiga que entende tudo de moda.\n\n- Use uma linguagem informal e acolhedora.\n- Use emojis (✨, 💖, 👚, etc.) para deixar a conversa mais leve e visual.\n- Seu objetivo principal é fazer com que a pessoa se sinta bem-vinda e ajudá-la a encontrar o que procura.\n- Mantenha as mensagens relativamente curtas e fáceis de ler."
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.2,
      "position": [
        1120,
        -96
      ],
      "id": "8a6f771d-8a1f-4192-ab6d-79faf8a0da98",
      "name": "Clô boas vindas"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "typeVersion": 1,
      "position": [
        1120,
        48
      ],
      "id": "11d062c2-c740-419b-89a0-a995b701285c",
      "name": "Google Gemini Chat Model1",
      "credentials": {
        "googlePalmApi": {
          "id": "uudgVexPy2IFFMaZ",
          "name": "Google Gemini(PaLM) Api account"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "a2cd4c50-88d0-49c1-bdc0-851fc08baf18",
              "name": "newState",
              "value": "inicio",
              "type": "string"
            },
            {
              "id": "abaf9193-ad99-4fbe-ba55-6bcd760595b8",
              "name": "lastBotResponse",
              "value": "={{ $json.result.text }}",
              "type": "string"
            },
            {
              "id": "1d13370a-1663-4112-a890-bd04898b76d4",
              "name": "lastUserMessage",
              "value": "={{ $('Edit Fields').item.json.message }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1584,
        -96
      ],
      "id": "16c8e246-bb86-46ef-b16f-4e92796d3552",
      "name": "Anotar Estado: inicio"
    },
    {
      "parameters": {
        "chatId": "={{ $('Edit Fields').item.json.chatId }}",
        "text": "={{ $json.output }}",
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        1408,
        -96
      ],
      "id": "4d7bc952-7c70-4812-b83b-f234fa704dd3",
      "name": "Send a text message",
      "webhookId": "65c2c2f4-4d33-48e6-96ac-e814e5f8bf4c",
      "credentials": {
        "telegramApi": {
          "id": "F1XsbGDUdE1n66HV",
          "name": "Telgram Token"
        }
      }
    },
    {
      "parameters": {
        "operation": "get",
        "propertyName": "estadoCompleto",
        "key": "=user:{{$json.chatId}}",
        "options": {}
      },
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        336,
        0
      ],
      "id": "84b3e678-e04b-4c3c-9df0-30cd936e0fd0",
      "name": "Ler Estado do Usuario",
      "credentials": {
        "redis": {
          "id": "6NTwK1kxYF9NeoE1",
          "name": "Credencial_Redis_Local"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// Pega o objeto JSON do nó anterior (\"Anotar Estado: inicio\")\n// O objeto se parece com: { \"newState\": \"inicio\", \"lastBotResponse\": \"Oiii!...\" }\nconst estadoObjeto = $input.item.json;\n\n// Converte este objeto inteiro em uma única string de texto.\nconst estadoCompletoString = JSON.stringify(estadoObjeto);\n\n// Retorna um novo objeto com uma única variável de saída.\n// Vamos chamá-la de \"estado_completo_string\" para ficar bem claro.\nreturn {\n  estado_completo_string: estadoCompletoString\n};"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1792,
        -96
      ],
      "id": "11e61651-66ea-4328-ac4f-27db64057b4a",
      "name": "Preparar Estado para Redis"
    },
    {
      "parameters": {
        "operation": "set",
        "key": "=user:{{ $('Edit Fields').item.json.chatId }}",
        "value": "={{ $json.estado_completo_string }}"
      },
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        2000,
        -96
      ],
      "id": "98be820e-c573-4156-99ae-9c776a705b7a",
      "name": "Redis",
      "credentials": {
        "redis": {
          "id": "6NTwK1kxYF9NeoE1",
          "name": "Credencial_Redis_Local"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Crie uma introdução amigável e convidativa para a seleção de produtos abaixo. Siga o formato dos exemplos.\n\n---\nLISTA DE PRODUTOS FORNECIDA:\n{{ JSON.stringify($('Agrupar').item.json.produtos) }}\n---\n\nExemplo 1 (se a lista tiver várias camisetas):\nINTRODUÇÃO: Boaa! Preparei uma seleção com as nossas camisetas mais estilosas que são a cara da estação. Tenho certeza que você vai amar! Olha só:\n\nExemplo 2 (se a lista for variada):\nINTRODUÇÃO: Eba! Separei aqui umas peças super especiais da nossa coleção que estão fazendo o maior sucesso. Prepare o coração! ✨ Confira:\n---\n\nAgora, crie a introdução para a LISTA DE PRODUTOS fornecida acima.\n\nINTRODUÇÃO:",
        "options": {
          "systemMessage": "Você é Clô, uma assistente de estilo amigável e casual. Sua tarefa é criar uma ÚNICA frase de introdução curta e animada para apresentar uma SELEÇÃO DE PRODUTOS para o cliente.\n\nAnalise a lista de produtos fornecida para entender o \"clima\" da seleção.\n- Se a lista tiver muitas peças de um mesmo tipo (ex: várias camisetas), você pode mencioná-las.\n- Se a lista for bem variada, diga que é uma seleção especial com os itens favoritos da loja.\n\nUse emojis que combinem, mas NUNCA use emoticons baseados em texto como '<3'."
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.2,
      "position": [
        1616,
        192
      ],
      "id": "76f4cbdb-147a-4651-9596-28ac923efce6",
      "name": "Clo Produtos"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "typeVersion": 1,
      "position": [
        1584,
        336
      ],
      "id": "4372e61e-8549-44ae-821a-04d04c92f239",
      "name": "Google Gemini Chat Model2",
      "credentials": {
        "googlePalmApi": {
          "id": "uudgVexPy2IFFMaZ",
          "name": "Google Gemini(PaLM) Api account"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=**Estado da Conversa Anterior:**\n{{ $json.estado_completo_string || 'Nenhum' }}\n\n**Nova Mensagem do Usuário:**\n{{ $('Edit Fields').item.json.message }}",
        "options": {
          "systemMessage": "Você é um classificador de intenção de alta precisão. Sua única tarefa é analisar a mensagem do usuário e retornar UMA ÚNICA PALAVRA como resposta.\n\nAs únicas respostas permitidas são:\n- \"ver_produtos\"\n- \"boas_vindas\"\n\nREGRAS:\n1.  Se a mensagem do usuário indicar qualquer interesse em produtos, catálogo, novidades, peças de roupa, ou compras, responda APENAS com a palavra: `ver_produtos`\n2.  Se a mensagem for APENAS uma saudação (oi, olá, bom dia), responda APENAS com a palavra: `boas_vindas`\n\nNÃO use JSON.\nNÃO use formatação.\nNÃO adicione explicações.\nNÃO use frases.\nApenas a palavra-chave.\n\nExemplo 1:\nUsuário: \"Quero ver o catálogo\"\nSua Resposta:\nver_produtos\n\nExemplo 2:\nUsuário: \"oi\"\nSua Resposta:\nboas_vindas"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.2,
      "position": [
        560,
        0
      ],
      "id": "505a3421-15a4-4379-878c-ba7328ecee48",
      "name": "Classificador de Intenção"
    },
    {
      "parameters": {
        "url": "http://host.docker.internal:3000/produtos",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1216,
        192
      ],
      "id": "570bb1c1-144f-4857-ba8c-5f4aca41c7ae",
      "name": "HTTP Request"
    },
    {
      "parameters": {
        "jsCode": "// Pega todos os itens (produtos) que vieram como entrada para este nó.\nconst allItems = $items();\n\n// Busca o Chat ID do nó 'Edit Fields' no início do fluxo.\nconst chatId = $('Edit Fields').item.json.chatId;\n\n\n// --- Resumo dos Dados Otimizado para a IA ---\n\nconst produtosResumidos = allItems.map(item => {\n  // Criamos um novo objeto SÓ com as informações que a IA ou o usuário precisam.\n  return {\n    nome: item.json.nome,           // <--- Corresponde ao seu campo \"nome\"\n    descricao: item.json.descricao, // <--- Corresponde ao seu campo \"descricao\"\n    preco: item.json.preco,         // <--- Corresponde ao seu campo \"preco\"\n    categoria: item.json.categoria,   // <--- Corresponde ao seu campo \"categoria\"\n    imagem_url: item.json.imagem_url  // <--- BÔNUS: Adicionei a URL da imagem!\n  };\n});\n\n\n// --- Montagem do Item Final ---\n\nconst aggregatedItem = {\n  json: {\n    produtos: produtosResumidos,\n    chatId: chatId\n  }\n};\n\n// Retorna apenas este item único com os dados limpos e prontos.\nreturn [aggregatedItem];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1424,
        192
      ],
      "id": "b8054d58-0268-43db-becb-e3a3eca6fb65",
      "name": "Agrupar"
    },
    {
      "parameters": {
        "jsCode": "// --- CORREÇÃO: Buscando dados de múltiplos nós ---\n\n// Pega a introdução criativa que a IA \"Clô Produtos\" acabou de gerar\nconst introDaIA = $('Clo Produtos').item.json.output;\n\n// Pega os dados dos produtos do nó \"Agrupar\"\nconst produtos = $('Agrupar').item.json.produtos;\n\n\n// Cria um array que vai conter todas as mensagens que vamos enviar\nconst outputItems = [];\n\n// 1. Adiciona a primeira mensagem: a introdução da IA\noutputItems.push({\n  json: {\n    // Apenas texto, sem foto\n    text_message: introDaIA\n  }\n});\n\n// 2. Loop para criar uma mensagem com FOTO para cada produto\nif (produtos && produtos.length > 0) {\n  for (const produto of produtos) {\n    \n    // Formata o preço para o padrão brasileiro (R$)\n    const precoFormatado = new Intl.NumberFormat('pt-BR', { style: 'currency', currency: 'BRL' }).format(produto.preco);\n\n    // Monta a LEGENDA da foto com tags HTML que o Telegram entende\n    let legenda = `<b>${produto.nome}</b>\\n\\n`;\n    legenda += `<i>${produto.descricao}</i>\\n\\n`;\n    legenda += `<b>Preço:</b> ${precoFormatado}`;\n\n    // Adiciona um item à lista de saída, formatado para enviar uma FOTO com LEGENDA\n    outputItems.push({\n      json: {\n        photo_url: produto.imagem_url, // A URL que você adicionou no JSON\n        caption: legenda\n      }\n    });\n  }\n\n\n\n} else {\n  // Caso não encontre produtos\n  const semProdutos = \"Puxa, não encontrei produtos para essa categoria no momento. 😕\";\n  outputItems.push({\n    json: {\n      text_message: semProdutos\n    }\n  });\n}\n\n// Retorna a LISTA de mensagens a serem enviadas\nreturn outputItems;"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1920,
        192
      ],
      "id": "301d709a-bb6f-4623-9136-8f2138122be2",
      "name": "Formatar Lista de Produtos"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "bc4f70cd-50e4-484c-9ed4-347ef38af9b8",
              "leftValue": "={{ $json.photo_url }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "empty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        2064,
        192
      ],
      "id": "ecc53ac9-dd03-4920-a5d4-1aa2c87c6566",
      "name": "Photo IF"
    },
    {
      "parameters": {
        "operation": "sendPhoto",
        "chatId": "={{ $('Agrupar').item.json.chatId }}",
        "file": "={{ $json.photo_url }}",
        "additionalFields": {
          "caption": "={{ $json.caption }}",
          "parse_mode": "HTML"
        }
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        2320,
        272
      ],
      "id": "282546dc-57cb-4fb6-9b7b-a4877ee2cf3d",
      "name": "Send a photo message",
      "webhookId": "b19db22a-3685-4d3c-ac36-fd678d8f7e93",
      "credentials": {
        "telegramApi": {
          "id": "F1XsbGDUdE1n66HV",
          "name": "Telgram Token"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $('Agrupar').item.json.chatId }}",
        "text": "={{ $json.text_message }}",
        "additionalFields": {
          "appendAttribution": false,
          "parse_mode": "HTML"
        }
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        2320,
        112
      ],
      "id": "749ff963-df03-4541-8cc6-d336d3029aeb",
      "name": "Enviar Mensagem",
      "webhookId": "f1dde3a1-6457-4cb1-bca1-cd987371ceab",
      "credentials": {
        "telegramApi": {
          "id": "F1XsbGDUdE1n66HV",
          "name": "Telgram Token"
        }
      }
    }
  ],
  "pinData": {},
  "connections": {
    "Telegram Trigger": {
      "main": [
        [
          {
            "node": "Edit Fields",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Gemini Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "Classificador de Intenção",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields": {
      "main": [
        [
          {
            "node": "Ler Estado do Usuario",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If": {
      "main": [
        [
          {
            "node": "Clô boas vindas",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "HTTP Request",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Gemini Chat Model1": {
      "ai_languageModel": [
        [
          {
            "node": "Clô boas vindas",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Clô boas vindas": {
      "main": [
        [
          {
            "node": "Send a text message",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Send a text message": {
      "main": [
        [
          {
            "node": "Anotar Estado: inicio",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Ler Estado do Usuario": {
      "main": [
        [
          {
            "node": "Classificador de Intenção",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Anotar Estado: inicio": {
      "main": [
        [
          {
            "node": "Preparar Estado para Redis",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Preparar Estado para Redis": {
      "main": [
        [
          {
            "node": "Redis",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Gemini Chat Model2": {
      "ai_languageModel": [
        [
          {
            "node": "Clo Produtos",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Classificador de Intenção": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request": {
      "main": [
        [
          {
            "node": "Agrupar",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Agrupar": {
      "main": [
        [
          {
            "node": "Clo Produtos",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Clo Produtos": {
      "main": [
        [
          {
            "node": "Formatar Lista de Produtos",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Formatar Lista de Produtos": {
      "main": [
        [
          {
            "node": "Photo IF",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Photo IF": {
      "main": [
        [
          {
            "node": "Enviar Mensagem",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Send a photo message",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Enviar Mensagem": {
      "main": [
        []
      ]
    },
    "Send a photo message": {
      "main": [
        []
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "7065b8ed-af08-4593-b8a8-96584c9b6b13",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "44631d0647de0aaa5604bf85f80cdbc72ba3bba08c629494f91f6ce3dccc1ed5"
  },
  "id": "CfWrabxoe8dqCkkd",
  "tags": []
}